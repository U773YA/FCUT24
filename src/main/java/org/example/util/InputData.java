package org.example.util;

import org.example.enums.Position;
import org.example.enums.Role;
import org.example.model.CardInput;
import org.example.model.CardScore;
import org.example.model.Manager;
import org.example.model.PlayerCard;
import org.example.model.PositionRole;
import org.example.model.Tactic;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;

import static org.example.enums.League.A_LEAGUE;
import static org.example.enums.League.BARCLAYS_WSL;
import static org.example.enums.League.CALCIO_A_FEMMINILE;
import static org.example.enums.League.CESKA_LIGA_ZEN;
import static org.example.enums.League.CINCH_PREM;
import static org.example.enums.League.D1_ARKEMA;
import static org.example.enums.League.GPFBL;
import static org.example.enums.League.HELLAS_LIGA;
import static org.example.enums.League.LA_LEAGUE_EA_SPORTS;
import static org.example.enums.League.LIBERTADORES;
import static org.example.enums.League.LIGA_F;
import static org.example.enums.League.LIGA_HRVATSKA;
import static org.example.enums.League.LIGA_PORTUGAL;
import static org.example.enums.League.LIGA_PORTUGAL_FEMININO;
import static org.example.enums.League.LPF;
import static org.example.enums.League.PREMIER_LEAGUE;
import static org.example.enums.League.ROSHN_SAUDI_LEAGUE;
import static org.example.enums.League.SERIA_A_TIM;
import static org.example.enums.League.SERIE_BKT;
import static org.example.enums.League.SUDAMERICANA;
import static org.example.enums.League.THREEF_SUPERLIGA;
import static org.example.enums.League.THREE_LIGA;
import static org.example.enums.League.TRENDYOL_SUPER_LIG;
import static org.example.enums.Position.CAM;
import static org.example.enums.Position.CB;
import static org.example.enums.Position.CDM;
import static org.example.enums.Position.CF;
import static org.example.enums.Position.CM;
import static org.example.enums.Position.GK;
import static org.example.enums.Position.LB;
import static org.example.enums.Position.LM;
import static org.example.enums.Position.LW;
import static org.example.enums.Position.LWB;
import static org.example.enums.Position.RB;
import static org.example.enums.Position.RM;
import static org.example.enums.Position.RW;
import static org.example.enums.Position.RWB;
import static org.example.enums.Position.ST;
import static org.example.enums.Role.AGILE_STRIKER;
import static org.example.enums.Role.ATT_FULLBACK_L;
import static org.example.enums.Role.ATT_FULLBACK_R;
import static org.example.enums.Role.BOX_TO_BOX;
import static org.example.enums.Role.CENTRAL_DEFENDER;
import static org.example.enums.Role.COMPLETE_STRIKER;
import static org.example.enums.Role.DEF_FULLBACK_L;
import static org.example.enums.Role.DEF_FULLBACK_R;
import static org.example.enums.Role.KEEPER;
import static org.example.enums.Role.PLAYMAKER;
import static org.example.enums.Role.POWERFUL_DM;
import static org.example.enums.Role.WINGER_L;
import static org.example.enums.Role.WINGER_R;

public class InputData {
    protected static final List<CardInput> playerCardInputList = new ArrayList<>();
    protected static final Map<Integer, PlayerCard> playerCardMap = new LinkedHashMap<>();
    protected static final List<Tactic> tacticList = new ArrayList<>();
    protected static final List<Manager> managerList = new ArrayList<>();
    protected static final Map<Position, List<Role>> positionRoleMap = new HashMap<>();
    protected static Map<Position, List<Integer>> playerPositionMap = new HashMap<>();
    protected static Map<PositionRole, List<CardScore>> positionRoleListMap = new HashMap<>();
    protected static final List<List<Integer>> cb2 = new ArrayList<>();
    protected static final List<List<Integer>> cb3 = new ArrayList<>();
    protected static final List<List<Integer>> cm2 = new ArrayList<>();
    protected static final List<List<Integer>> st2 = new ArrayList<>();
    protected static final List<List<Integer>> cf2 = new ArrayList<>();
    protected static final List<List<Integer>> cdm2 = new ArrayList<>();
    protected static final List<List<Integer>> cam2 = new ArrayList<>();
    protected static final List<List<Integer>> cm3 = new ArrayList<>();
    protected static final List<List<Integer>> cb_cb2 = new ArrayList<>();
    protected static final List<List<Integer>> cb_cb3 = new ArrayList<>();
    protected static final List<List<Integer>> cm_b2b2 = new ArrayList<>();
    protected static final List<List<Integer>> st_st2 = new ArrayList<>();
    protected static final List<List<Integer>> cam_cam2 = new ArrayList<>();
    protected static final List<List<Integer>> cf_rat2 = new ArrayList<>();
    protected static final long startTime = System.nanoTime();
    protected static long allTeamsCount = 1;
    protected static long teamCounter = 0;
    protected static long chemistryCap = 27;
    protected static List<Integer> mandatoryPlayers = List.of(20766);
    protected static final List<Position> duplicatePositions = List.of(CB, CM, ST, CF, CDM, CAM);
    protected static final List<PositionRole> duplicatePositionRoles = List.of(new PositionRole(CB, CENTRAL_DEFENDER),
            new PositionRole(CM, BOX_TO_BOX), new PositionRole(ST, COMPLETE_STRIKER), new PositionRole(CAM, PLAYMAKER),
            new PositionRole(CF, AGILE_STRIKER));

    static {
        positionRoleMap.put(GK, List.of(KEEPER));
        positionRoleMap.put(RB, List.of(DEF_FULLBACK_R));
        positionRoleMap.put(LB, List.of(DEF_FULLBACK_L));
        positionRoleMap.put(CB, List.of(CENTRAL_DEFENDER));
        positionRoleMap.put(RWB, List.of(ATT_FULLBACK_R));
        positionRoleMap.put(LWB, List.of(ATT_FULLBACK_L));
        positionRoleMap.put(CDM, List.of(POWERFUL_DM, BOX_TO_BOX));
        positionRoleMap.put(RM, List.of(WINGER_R, ATT_FULLBACK_R));
        positionRoleMap.put(LM, List.of(WINGER_L, ATT_FULLBACK_L));
        positionRoleMap.put(CM, List.of(BOX_TO_BOX, POWERFUL_DM, PLAYMAKER));
        positionRoleMap.put(RW, List.of(WINGER_R, AGILE_STRIKER));
        positionRoleMap.put(LW, List.of(WINGER_L, AGILE_STRIKER));
        positionRoleMap.put(CAM, List.of(PLAYMAKER, WINGER_R, WINGER_L));
        positionRoleMap.put(CF, List.of(WINGER_R, WINGER_L, COMPLETE_STRIKER, PLAYMAKER, AGILE_STRIKER));
        positionRoleMap.put(ST, List.of(COMPLETE_STRIKER, AGILE_STRIKER));
    }

    protected static void populatePlayerInput() {
//        playerCardInputList.add(new CardInput(20439, 50570087, "PAULO MALDINI ULTIMATE DYNASTIES ICON", 93));
        playerCardInputList.add(new CardInput(20518, 100865422, "KANE TOTGS", 93));
//        playerCardInputList.add(new CardInput(20633, 50567438, "HAVERTZ WINTER WILDCARDS", 87));

//        playerCardInputList.add(new CardInput(19654, 50512578, "DZEKO RTTK", 90));
        playerCardInputList.add(new CardInput(32, 227125, "KERR", 90));

        playerCardInputList.add(new CardInput(53, 212831, "ALISSON", 89));
        playerCardInputList.add(new CardInput(67, 200145, "CASEMIRO", 89));
        playerCardInputList.add(new CardInput(20524, 67307570, "LUIS ALBERTO TOTGS", 89));
        playerCardInputList.add(new CardInput(47, 236479, "MAPI LEON", 89));
//        playerCardInputList.add(new CardInput(49, 231866, "RODRI", 89));
        playerCardInputList.add(new CardInput(48, 239818, "RUBEN DIAS", 89));
        playerCardInputList.add(new CardInput(45, 209331, "SALAH", 89));
        playerCardInputList.add(new CardInput(20713, 50535222, "STONES WINTER WILDCARDS", 89));
        playerCardInputList.add(new CardInput(52, 192448, "TER STEGEN", 89));
        playerCardInputList.add(new CardInput(28, 203376, "VAN DIJK", 89));
        playerCardInputList.add(new CardInput(20576, 100866672, "VAN DIJK EURO", 89));

        playerCardInputList.add(new CardInput(20279, 67297431, "AUBAMEYANG RADIOACTIVE", 88));
        playerCardInputList.add(new CardInput(16676133, 211504, "BAKER WINTER WILDCARDS EVO", 88, "46-39-53"));
//        playerCardInputList.add(new CardInput(19646, 67293208, "BONUCCI RTTK", 88));
        playerCardInputList.add(new CardInput(18950, 48940, "CECH ICON", 88));
        playerCardInputList.add(new CardInput(230, 194765, "GRIEZMANN", 88));
        playerCardInputList.add(new CardInput(187, 227190, "IRENE PAREDES", 88));
        playerCardInputList.add(new CardInput(20087, 67342526, "KARCHAOUI TRIPLE THREAT", 88));
        playerCardInputList.add(new CardInput(112, 246272, "KATOTO", 88));
        playerCardInputList.add(new CardInput(300, 212622, "KIMMICH", 88));
        playerCardInputList.add(new CardInput(8121023, 50569327, "KOLO MUANI FOUNDERS EVO", 88, "36-44"));
        playerCardInputList.add(new CardInput(20630, 50488001, "LUIS HERNANDEZ WINTER WILDCARDS ICON", 88));
//        playerCardInputList.add(new CardInput(20210, 84078585, "LUKAKU THUNDERSTRUCK", 88));
        playerCardInputList.add(new CardInput(20089, 50596900, "NEVILLE", 88));
        playerCardInputList.add(new CardInput(20649, 50561790, "OYARZABAL WINTER WILDCARDS", 88));
        playerCardInputList.add(new CardInput(106, 226302, "POPP", 88));
        playerCardInputList.add(new CardInput(397, 227316, "RENARD", 88));
        playerCardInputList.add(new CardInput(70, 218667, "SILVA", 88));
        playerCardInputList.add(new CardInput(380, 264012, "SMITH", 88));
        playerCardInputList.add(new CardInput(20580, 50565386, "ZUBELDIA TOTGS", 88));

        playerCardInputList.add(new CardInput(20433, 50558402, "BENNACER RADIOACTIVE", 87));
        playerCardInputList.add(new CardInput(20227, 50571228, "BREMER THUNDERSTRUCK", 87));
//        playerCardInputList.add(new CardInput(190, 227246, "BRONZE", 87));
        playerCardInputList.add(new CardInput(20541, 67326734, "DI LORENZO TOTGS", 87));
        playerCardInputList.add(new CardInput(423, 230621, "DONNARUMMA", 87));
//        playerCardInputList.add(new CardInput(19864, 50524277, "IAGO ASPAS FLASHBACK", 87));
        playerCardInputList.add(new CardInput(20481, 67347949, "HAALAND BEATS", 87));
        playerCardInputList.add(new CardInput(20225, 50545314, "LOFTUS-CHEEK THUNDERSTRUCK", 87));
        playerCardInputList.add(new CardInput(19071, 266801, "KEWELL HEROES", 87));
        playerCardInputList.add(new CardInput(301, 235073, "KOBEL", 87));
        playerCardInputList.add(new CardInput(19673, 50579283, "KVARATSKHELIA TOTW", 87));
        playerCardInputList.add(new CardInput(20092, 67329561, "MADDISON TRIPLE THREAT", 87));
//        playerCardInputList.add(new CardInput(339, 233837, "MAGULL", 87));
        playerCardInputList.add(new CardInput(449, 215698, "MAIGNAN", 87));
        playerCardInputList.add(new CardInput(20169, 50563095, "MALEN FC PRO", 87));
        playerCardInputList.add(new CardInput(20714, 67317586, "MANE TOTW", 87));
//        playerCardInputList.add(new CardInput(445, 231478, "MARTINEZ", 87));
//        playerCardInputList.add(new CardInput(134, 245802, "MEAD", 87));
        playerCardInputList.add(new CardInput(19647, 50507591, "MERTENS RTTK", 87));
        playerCardInputList.add(new CardInput(226, 177003, "MODRIC", 87));
//        playerCardInputList.add(new CardInput(324, 248717, "OBERDORF", 87));
//        playerCardInputList.add(new CardInput(71, 222665, "ODEGAARD", 87));
        playerCardInputList.add(new CardInput(323, 241846, "PAJOR", 87));
        playerCardInputList.add(new CardInput(191, 227013, "ROLFO", 87));
        playerCardInputList.add(new CardInput(20769, 50555941, "RUBEN NEVES MOMENTS", 87));
//        playerCardInputList.add(new CardInput(464, 227776, "SANDRA PANOS", 87));
        playerCardInputList.add(new CardInput(20648, 50556774, "SKHIRI WINTER WILDCARDS", 87));
        playerCardInputList.add(new CardInput(20735, 67295401, "STUANI STORYLINE", 87));
        playerCardInputList.add(new CardInput(20023, 50495888, "THIAGO SILVA FUT CENTURIONS", 87));
//        playerCardInputList.add(new CardInput(953302, 223197, "UNAL CENTURIONS EVO", 87, "2-17"));
        playerCardInputList.add(new CardInput(19979, 50509061, "WITSEL STORYLINE", 87));

//        playerCardInputList.add(new CardInput(72, 231281, "ALEXANDER-ARNOLD", 86));
        playerCardInputList.add(new CardInput(233, 253163, "ARAUJO", 86));
        playerCardInputList.add(new CardInput(66, 265674, "BACHA", 86));
        playerCardInputList.add(new CardInput(20615, 67333949, "BAMBA WINTER WILDCARDS", 86));
        playerCardInputList.add(new CardInput(457, 224232, "BARELLA", 86));
        playerCardInputList.add(new CardInput(19, 50371034, "BEASLEY UEFA HERO", 86));
        playerCardInputList.add(new CardInput(25, 252371, "BELLINGHAM", 86));
        playerCardInputList.add(new CardInput(19077, 275092, "BOMPASTOR HERO", 86));
        playerCardInputList.add(new CardInput(19991, 50556019, "BOWEN FUT CENTURIONS", 86));
//        playerCardInputList.add(new CardInput(19134, 50542162, "CANCELO", 86));
        playerCardInputList.add(new CardInput(150, 20801, "CRISTIANO RONALDO", 86));
        playerCardInputList.add(new CardInput(19908, 50532536, "DANILO PEREIRA FUT CENTURIONS", 86));
        playerCardInputList.add(new CardInput(20766, 50575908, "DANI OLMO VERSUS FIRE", 86));
        playerCardInputList.add(new CardInput(20763, 67353124, "DANI OLMO VERSUS ICE", 86));
//        playerCardInputList.add(new CardInput(303, 235243, "DE LIGT", 86));
        playerCardInputList.add(new CardInput(20164, 50556106, "DIOGO JOTA FC PRO", 86));
        playerCardInputList.add(new CardInput(20715, 50591753, "DRAGUSIN TOTW", 86));
        playerCardInputList.add(new CardInput(19042, 44897, "DUDEK HERO", 86));
//        playerCardInputList.add(new CardInput(462, 211110, "DYBALA", 86));
//        playerCardInputList.add(new CardInput(143, 247504, "EARPS", 86));
        playerCardInputList.add(new CardInput(229, 240130, "EDER MILITAO", 86));
        playerCardInputList.add(new CardInput(1763102, 237221, "FOYTH MARAUDER", 86, "29"));
        playerCardInputList.add(new CardInput(20549, 50593421, "FREIGANG UCLW", 86));
        playerCardInputList.add(new CardInput(20262, 50600086, "GARNACHO TOTW", 86));
        playerCardInputList.add(new CardInput(20501, 50598520, "GATTI TOTW", 86));
//        playerCardInputList.add(new CardInput(404, 237197, "GEYORO", 86));
//        playerCardInputList.add(new CardInput(236, 186942, "GUNDOGAN", 86));
        playerCardInputList.add(new CardInput(20326, 84064683, "HUMMELS TOTW", 86));
        playerCardInputList.add(new CardInput(20214, 50554982, "JOELINTON THUNDERSTRUCK", 86));
//        playerCardInputList.add(new CardInput(261, 215914, "KANTE", 86));
        playerCardInputList.add(new CardInput(20165, 50563474, "KARAMOH FC PRO", 86));
        playerCardInputList.add(new CardInput(405, 233662, "KARCHAOUI", 86));
        playerCardInputList.add(new CardInput(20293, 50562586, "KESSIE RADIOACTIVE", 86));
        playerCardInputList.add(new CardInput(20645, 50540222, "KOSTIC WINTER WILDCARDS", 86));
//        playerCardInputList.add(new CardInput(228, 182521, "KROOS", 86));
        playerCardInputList.add(new CardInput(19956, 50596887, "MCCABE TOTW", 86));
        playerCardInputList.add(new CardInput(20434, 50534911, "MAGUIRE POTM", 86));
//        playerCardInputList.add(new CardInput(278, 204485, "MAHREZ", 86));
//        playerCardInputList.add(new CardInput(268, 223848, "MILINKOVIC-SAVIC", 86));
        playerCardInputList.add(new CardInput(20684, 50552171, "MINA WINTER WILDCARDS", 86));
//        playerCardInputList.add(new CardInput(238, 189513, "PAREJO", 86));
        playerCardInputList.add(new CardInput(20598, 50482164, "PODOLSKI WINTER WILDCARDS", 86));
//        playerCardInputList.add(new CardInput(19976, 50574782, "RAMAZANI", 86));
        playerCardInputList.add(new CardInput(74, 216267, "ROBERTSON", 86));
//        playerCardInputList.add(new CardInput(340, 244302, "SCHULLER", 86));
        playerCardInputList.add(new CardInput(461, 186153, "SZCZESNY", 86));
        playerCardInputList.add(new CardInput(20599, 50592055, "WAHI WINTER WILDCARDS", 86));
//        playerCardInputList.add(new CardInput(19854, 50537217, "WARD-PROWSE TRAILBLAZERS", 86));
        playerCardInputList.add(new CardInput(20126, 50568288, "WILLIAMS TOTW", 86));
//        playerCardInputList.add(new CardInput(19782, 50528626, "WILSON TRAILBLAZERS", 86));

        playerCardInputList.add(new CardInput(239, 224334, "ACUNA", 85));
        playerCardInputList.add(new CardInput(270, 209981, "BOUNOU", 85));
//        playerCardInputList.add(new CardInput(149, 238257, "BRIGHT", 85));
        playerCardInputList.add(new CardInput(440, 208128, "CALHANOGLU", 85));
        playerCardInputList.add(new CardInput(19993, 50546645, "CORREA FUT CENTURIONS", 85));
        playerCardInputList.add(new CardInput(2511, 235657, "DALY", 85));
        playerCardInputList.add(new CardInput(19957, 50521797, "DE MARCOS TOTW", 85));
        playerCardInputList.add(new CardInput(459, 217870, "DI LORENZO", 85));
        playerCardInputList.add(new CardInput(79, 224458, "DIOGO JOTA", 85));
        playerCardInputList.add(new CardInput(76, 237692, "FODEN", 85));
//        playerCardInputList.add(new CardInput(332, 247789, "FROHMS", 85));
        playerCardInputList.add(new CardInput(1004734, 251517, "GVARDIOL CENTURIONS EVO", 85, "19"));
        playerCardInputList.add(new CardInput(443, 192387, "IMMOBILE", 85));
        playerCardInputList.add(new CardInput(386, 227318, "HENRY", 85));
        playerCardInputList.add(new CardInput(19793, 50558651, "HURTIG FOUNDATIONS", 85));
        playerCardInputList.add(new CardInput(266, 212218, "LAPORTE", 85));
        playerCardInputList.add(new CardInput(20118, 50573196, "LE GARREC FOUNDATIONS", 85));
        playerCardInputList.add(new CardInput(20437, 50587259, "MALDINI DYNASTIES", 85));
        playerCardInputList.add(new CardInput(77, 202811, "MARTINEZ", 85));
        playerCardInputList.add(new CardInput(241, 225193, "MERINO", 85));
        playerCardInputList.add(new CardInput(162, 265239, "MCCABE", 85));
        playerCardInputList.add(new CardInput(173, 226753, "ONANA", 85));
//        playerCardInputList.add(new CardInput(388, 226328, "RAPINOE", 85));
        playerCardInputList.add(new CardInput(20686, 50584650, "RASPADORI WINTER WILDCARDS", 85));
        playerCardInputList.add(new CardInput(80, 234378, "RICE", 85));
        playerCardInputList.add(new CardInput(243, 205452, "RUDIGER", 85));
        playerCardInputList.add(new CardInput(20028, 50576323, "SANCET TOTW", 85));
//        playerCardInputList.add(new CardInput(392, 226177, "SAUERBRUNN", 85));
//        playerCardInputList.add(new CardInput(105, 246219, "SHAW", 85));
        playerCardInputList.add(new CardInput(20298, 50524996, "SHAQIRI RADIOACTIVE", 85));
        playerCardInputList.add(new CardInput(84, 203574, "STONES", 85));
        playerCardInputList.add(new CardInput(19759, 50534300, "STERLING TOTW", 85));
//        playerCardInputList.add(new CardInput(307, 188943, "TRAPP", 85));
//        playerCardInputList.add(new CardInput(81, 186345, "TRIPPIER", 85));
        playerCardInputList.add(new CardInput(19973, 50565815, "VAN DER HEYDEN", 85));
        playerCardInputList.add(new CardInput(2514, 201535, "VARANE", 85));
        playerCardInputList.add(new CardInput(20297, 50501064, "VELA RADIOACTIVE", 85));
//        playerCardInputList.add(new CardInput(2515, 242830, "WALSH", 85));
//        playerCardInputList.add(new CardInput(308, 256630, "WIRTZ", 85));
        playerCardInputList.add(new CardInput(20031, 50530365, "ZAHA TOTW", 85));
//        playerCardInputList.add(new CardInput(163, 265242, "ZINSBERGER", 85));

        playerCardInputList.add(new CardInput(469, 227127, "ALEX REMIRO", 84));
        playerCardInputList.add(new CardInput(444, 226754, "BENNACER", 84));
//        playerCardInputList.add(new CardInput(387, 267215, "BIXBY", 84));
//        playerCardInputList.add(new CardInput(309, 212194, "BRANDT", 84));
        playerCardInputList.add(new CardInput(447, 239580, "BREMER", 84));
        playerCardInputList.add(new CardInput(2524, 247851, "BRUNO GUIMARAES", 84));
        playerCardInputList.add(new CardInput(656148, 244193, "CABRAL CENTURIONS EVOLUTION", 84, "15"));
//        playerCardInputList.add(new CardInput(389, 238212, "CAMPBELL", 84));
        playerCardInputList.add(new CardInput(20101, 50578294, "CAQUERET TRIPLE THREAT", 84));
        playerCardInputList.add(new CardInput(19127, 50540066, "CARRASCO", 84));
//        playerCardInputList.add(new CardInput(19795, 50596895, "CARTER FOUNDATIONS", 84));
        playerCardInputList.add(new CardInput(310, 192984, "CASTEELS", 84));
//        playerCardInputList.add(new CardInput(20721, 50569360, "CASTELLANOS TOTW", 84));
//        playerCardInputList.add(new CardInput(20269, 50583400, "CHEVALIER TOTW", 84));
//        playerCardInputList.add(new CardInput(402, 227327, "DABRITZ", 84));
//        playerCardInputList.add(new CardInput(341, 239345, "DALLMANN", 84));
//        playerCardInputList.add(new CardInput(331, 202556, "DEPAY", 84));
        playerCardInputList.add(new CardInput(87, 241852, "DIABY", 84));
//        playerCardInputList.add(new CardInput(403, 264884, "DUDEK", 84));
        playerCardInputList.add(new CardInput(20704, 50569090, "ERIK CURBELO WINTER WILDCARDS", 84));
//        playerCardInputList.add(new CardInput(262, 209499, "FABINHO", 84));
        playerCardInputList.add(new CardInput(2523, 267201, "FISHLOCK", 84));
//        playerCardInputList.add(new CardInput(166, 227110, "FOORD", 84));
        playerCardInputList.add(new CardInput(2521, 232580, "GABRIEL", 84));
//        playerCardInputList.add(new CardInput(2522, 230666, "GABRIEL JESUS", 84));
        playerCardInputList.add(new CardInput(2527, 251566, "GABRIEL MARTINELLI", 84));
//        playerCardInputList.add(new CardInput(20327, 50590377, "GABRI VEIGA TOTW", 84));
//        playerCardInputList.add(new CardInput(20128, 50536834, "GAZZANIGA TOTW", 84));
//        playerCardInputList.add(new CardInput(311, 207862, "GINTER", 84));
        playerCardInputList.add(new CardInput(19760, 50510157, "GIROUD TOTW", 84));
        playerCardInputList.add(new CardInput(313, 210035, "GRIMALDO", 84));
        playerCardInputList.add(new CardInput(314, 185122, "GULACSI", 84));
//        playerCardInputList.add(new CardInput(343, 259287, "HARDER", 84));
        playerCardInputList.add(new CardInput(415, 220814, "HERNANDEZ", 84));
//        playerCardInputList.add(new CardInput(117, 213648, "HOJBJERG", 84));
        playerCardInputList.add(new CardInput(20720, 50578905, "IBANEZ TOTW", 84));
        playerCardInputList.add(new CardInput(165, 226979, "ILESTEDT", 84));
        playerCardInputList.add(new CardInput(83, 238074, "JAMES", 84));
        playerCardInputList.add(new CardInput(19091, 50566800, "KADIOGLU FOUNDATIONS", 84));
        playerCardInputList.add(new CardInput(107, 257001, "KELLY", 84));
//        playerCardInputList.add(new CardInput(2525, 266816, "KINGSBURY", 84));
        playerCardInputList.add(new CardInput(169, 227255, "KIRBY", 84));
//        playerCardInputList.add(new CardInput(333, 193747, "KOKE", 84));
        playerCardInputList.add(new CardInput(19261, 50569327, "KOLO MUANI", 84));
//        playerCardInputList.add(new CardInput(4226570, 50569327, "KOLO MUANI FOUNDERS EVO", 86, "36"));
        playerCardInputList.add(new CardInput(274, 201024, "KOULIBALY", 84));
        playerCardInputList.add(new CardInput(336, 226161, "LLORENTE", 84));
//        playerCardInputList.add(new CardInput(450, 216435, "LOBOTKA", 84));
//        playerCardInputList.add(new CardInput(452, 198706, "LUIS ALBERTO", 84));
        playerCardInputList.add(new CardInput(19103, 50524153, "LUKAKU", 84));
//        playerCardInputList.add(new CardInput(122, 220697, "MADDISON", 84));
//        playerCardInputList.add(new CardInput(192, 227191, "MARTA TORREJON", 84));
        playerCardInputList.add(new CardInput(408, 227350, "MAJRI", 84));
//        playerCardInputList.add(new CardInput(406, 233748, "MARTENS", 84));
        playerCardInputList.add(new CardInput(467, 239301, "MARTINEZ", 84));
//        playerCardInputList.add(new CardInput(409, 245697, "MATEO", 84));
        playerCardInputList.add(new CardInput(316, 189596, "MULLER", 84));
//        playerCardInputList.add(new CardInput(468, 267275, "NAGASATO", 84));
//        playerCardInputList.add(new CardInput(410, 246641, "NNADOZIE", 84));
//        playerCardInputList.add(new CardInput(19661, 50552822, "ORSIC FOUNDATIONS", 84));
        playerCardInputList.add(new CardInput(172, 203841, "POPE", 84));
        playerCardInputList.add(new CardInput(455, 210008, "RABIOT", 84));
//        playerCardInputList.add(new CardInput(171, 233934, "RAMSDALE", 84));
        playerCardInputList.add(new CardInput(2519, 233419, "RAPHINHA", 84));
        playerCardInputList.add(new CardInput(20120, 50597491, "ROBERT FOUNDATIONS", 84));
        playerCardInputList.add(new CardInput(19761, 50564136, "ROMERO TOTW", 84));
//        playerCardInputList.add(new CardInput(271, 224293, "RUBEN NEVES", 84));
//        playerCardInputList.add(new CardInput(317, 222492, "SANE", 84));
//        playerCardInputList.add(new CardInput(470, 227410, "SCOTT", 84));
        playerCardInputList.add(new CardInput(414, 232363, "SKRINIAR", 84));
//        playerCardInputList.add(new CardInput(456, 189881, "SMALLING", 84));
//        playerCardInputList.add(new CardInput(442, 177683, "SOMMER", 84));
        playerCardInputList.add(new CardInput(344, 243404, "STANWAY", 84));
        playerCardInputList.add(new CardInput(318, 212190, "SULE", 84));
        playerCardInputList.add(new CardInput(245, 241637, "TCHOUAMENI", 84));
        playerCardInputList.add(new CardInput(487296, 226491, "TIERNEY EVOLUTIONS III", 84, "11"));
//        playerCardInputList.add(new CardInput(2516, 189509, "THIAGO", 84));
//        playerCardInputList.add(new CardInput(85, 164240, "THIAGO SILVA", 84));
        playerCardInputList.add(new CardInput(19790, 50571352, "WAGNER TRAILBLAZERS", 84));
        playerCardInputList.add(new CardInput(88, 188377, "WALKER", 84));
//        playerCardInputList.add(new CardInput(197, 245879, "WEIR", 84));
        playerCardInputList.add(new CardInput(19087, 50585065, "WILMS FOUNDATIONS", 84));

//        playerCardInputList.add(new CardInput(471, 199845, "ACERBI", 83));
        playerCardInputList.add(new CardInput(194, 246630, "AJIBADE", 83));
//        playerCardInputList.add(new CardInput(20334, 50590713, "ARNAU TENAS TOTW", 83));
//        playerCardInputList.add(new CardInput(20588, 84118690, "ASANO TOTW", 83));
//        playerCardInputList.add(new CardInput(416, 220834, "ASENSIO", 83));
//        playerCardInputList.add(new CardInput(20664, 50536177, "BATSHUAYI TOTW", 83));
//        playerCardInputList.add(new CardInput(473, 247797, "BLUNDELL", 83));
//        playerCardInputList.add(new CardInput(497, 224179, "BORJA IGLESIAS", 83));
        playerCardInputList.add(new CardInput(474, 227072, "BONANSEA", 83));
//        playerCardInputList.add(new CardInput(475, 251809, "BOTMAN", 83));
//        playerCardInputList.add(new CardInput(277, 216352, "BROZOVIC", 83));
//        playerCardInputList.add(new CardInput(20193, 67350948, "CARLOS CORONEL TOTW", 83));
//        playerCardInputList.add(new CardInput(479, 266933, "CARUSO", 83));
        playerCardInputList.add(new CardInput(480, 227119, "CATLEY", 83));
        playerCardInputList.add(new CardInput(19663, 50542612, "CECCHERINI FOUNDATIONS", 83));
//        playerCardInputList.add(new CardInput(481, 213661, "CHRISTENSEN", 83));
//        playerCardInputList.add(new CardInput(19614, 50531635, "CILLESSEN FOUNDATIONS", 83));
//        playerCardInputList.add(new CardInput(193, 262531, "CLAUDIA PINA", 83));
//        playerCardInputList.add(new CardInput(482, 245882, "CUTHBERT", 83));
//        playerCardInputList.add(new CardInput(510, 244260, "DANI OLMO", 83));
//        playerCardInputList.add(new CardInput(484, 183898, "DI MARIA", 83));
//        playerCardInputList.add(new CardInput(20335, 50573850, "DRUIJF TOTW", 83));
//        playerCardInputList.add(new CardInput(485, 180930, "DZEKO", 83));
//        playerCardInputList.add(new CardInput(486, 190460, "ERIKSEN", 83));
//        playerCardInputList.add(new CardInput(345, 226998, "ERIKSSON", 83));
        playerCardInputList.add(new CardInput(487, 216594, "FEKIR", 83));
//        playerCardInputList.add(new CardInput(490, 232077, "FRANCH", 83));
//        playerCardInputList.add(new CardInput(359, 261773, "FREIGANG", 83));
//        playerCardInputList.add(new CardInput(493, 265275, "GALTON", 83));
//        playerCardInputList.add(new CardInput(512, 264240, "GAVI", 83));
//        playerCardInputList.add(new CardInput(506, 208093, "GERARD MORENO", 83));
//        playerCardInputList.add(new CardInput(494, 247513, "GILLES", 83));
//        playerCardInputList.add(new CardInput(328, 216460, "GIMENEZ", 83));
        playerCardInputList.add(new CardInput(108, 227254, "GREENWOOD", 83));
        playerCardInputList.add(new CardInput(356, 247788, "GWINN", 83));
//        playerCardInputList.add(new CardInput(358, 205693, "HALLER", 83));
//        playerCardInputList.add(new CardInput(364, 248715, "HEGERING", 83));
//        playerCardInputList.add(new CardInput(495, 210324, "HOFMANN", 83));
//        playerCardInputList.add(new CardInput(496, 178603, "HUMMELS", 83));
        playerCardInputList.add(new CardInput(472, 189332, "JORDI ALBA", 83));
//        playerCardInputList.add(new CardInput(489, 205498, "JORGINHO", 83));
        playerCardInputList.add(new CardInput(499, 226329, "KLINGENBERG", 83));
        playerCardInputList.add(new CardInput(500, 208574, "KOSTIC", 83));
//        playerCardInputList.add(new CardInput(426, 193301, "LACAZETTE", 83));
        playerCardInputList.add(new CardInput(501, 225375, "LAIMER", 83));
//        playerCardInputList.add(new CardInput(118, 167948, "LLORIS", 83));
//        playerCardInputList.add(new CardInput(20510, 50547847, "MAINKA TOTW", 83));
//        playerCardInputList.add(new CardInput(502, 229582, "MANCINI", 83));
//        playerCardInputList.add(new CardInput(504, 227346, "MBOCK", 83));
//        playerCardInputList.add(new CardInput(20195, 50572296, "METCALFE TOTW", 83));
        playerCardInputList.add(new CardInput(329, 201153, "MORATA", 83));
        playerCardInputList.add(new CardInput(505, 225116, "MERET", 83));
//        playerCardInputList.add(new CardInput(507, 243775, "MURPHY", 83));
//        playerCardInputList.add(new CardInput(246, 200724, "NACHO", 83));
//        playerCardInputList.add(new CardInput(346, 264994, "NASCHENWENG", 83));
//        playerCardInputList.add(new CardInput(20035, 50557507, "NIAKHATE TOTW", 83));
//        playerCardInputList.add(new CardInput(509, 226318, "O'HARA", 83));
//        playerCardInputList.add(new CardInput(322, 204638, "ORBAN", 83));
//        playerCardInputList.add(new CardInput(511, 230142, "OYARZABAL", 83));
//        playerCardInputList.add(new CardInput(19618, 50603899, "PATRI OJEDA FOUNDATIONS", 83));
//        playerCardInputList.add(new CardInput(491, 241464, "PAU TORRES", 83));
//        playerCardInputList.add(new CardInput(19189, 50558499, "PAVARD", 83));
//        playerCardInputList.add(new CardInput(20728, 67349834, "PAYERO TOTW", 83));
//        playerCardInputList.add(new CardInput(515, 246178, "PEYRAUD-MAGNIN", 83));
//        playerCardInputList.add(new CardInput(362, 264939, "PRASNIKAR", 83));
//        playerCardInputList.add(new CardInput(516, 226327, "PRESS", 83));
        playerCardInputList.add(new CardInput(488, 216547, "RAFA", 83));
//        playerCardInputList.add(new CardInput(20595, 50567168, "RAFA MUJICA TOTW", 83));
//        playerCardInputList.add(new CardInput(517, 233838, "RAUCH", 83));
//        playerCardInputList.add(new CardInput(363, 188350, "REUS", 83));
        playerCardInputList.add(new CardInput(20119, 50596533, "REVELLI FOUNDATIONS", 83));
//        playerCardInputList.add(new CardInput(518, 225659, "RODRIGUEZ", 83));
//        playerCardInputList.add(new CardInput(519, 210413, "ROMAGNOLI", 83));
//        playerCardInputList.add(new CardInput(520, 227067, "ROSUCCI", 83));
//        playerCardInputList.add(new CardInput(20589, 50572650, "SABBI TOTW", 83));
        playerCardInputList.add(new CardInput(19662, 50529791, "SAMU SAIZ FOUNDATIONS", 83));
        playerCardInputList.add(new CardInput(522, 234236, "SCHICK", 83));
//        playerCardInputList.add(new CardInput(523, 227405, "SCHMIDT", 83));
//        playerCardInputList.add(new CardInput(524, 262058, "SELLNER", 83));
        playerCardInputList.add(new CardInput(483, 202648, "SERGI DARDER", 83));
//        playerCardInputList.add(new CardInput(477, 189511, "SERGIO BUSQUETS", 83));
//        playerCardInputList.add(new CardInput(525, 205988, "SHAW", 83));
//        playerCardInputList.add(new CardInput(280, 233747, "SPITSE", 83));
//        playerCardInputList.add(new CardInput(86, 202652, "STERLING", 83));
//        playerCardInputList.add(new CardInput(528, 263011, "TOONE", 83));
        playerCardInputList.add(new CardInput(526, 230869, "UNAI SIMON", 83));
//        playerCardInputList.add(new CardInput(19794, 50558849, "VICKY LOSADA FOUNDATIONS", 83));
//        playerCardInputList.add(new CardInput(529, 264886, "VIGGOSDOTTIR", 83));
        playerCardInputList.add(new CardInput(530, 246430, "VLAHOVIC", 83));
//        playerCardInputList.add(new CardInput(20724, 50523771, "WOOD TOTW", 83));
        playerCardInputList.add(new CardInput(533, 227236, "ZAMBO ANGUISSA", 83));
//        playerCardInputList.add(new CardInput(534, 210406, "ZIELINSKI", 83));

//        playerCardInputList.add(new CardInput(602, 246774, "ALBA REDONDO", 82));
        playerCardInputList.add(new CardInput(536, 212242, "ANDRICH", 82));
//        playerCardInputList.add(new CardInput(616, 246287, "ANGELA SOSA", 82));
        playerCardInputList.add(new CardInput(535, 229237, "AKANJI", 82));
//        playerCardInputList.add(new CardInput(538, 264892, "BACHMANN", 82));
//        playerCardInputList.add(new CardInput(539, 261733, "BALTIMORE", 82));
        playerCardInputList.add(new CardInput(121, 227535, "BENTANCUR", 82));
//        playerCardInputList.add(new CardInput(369, 265001, "BILLA", 82));
        playerCardInputList.add(new CardInput(252, 248243, "CAMAVINGA", 82));
        playerCardInputList.add(new CardInput(247, 204963, "CARVAJAL", 82));
//        playerCardInputList.add(new CardInput(541, 264011, "COOK", 82));
        playerCardInputList.add(new CardInput(19516, 50600588, "CRNOGORCEVIC", 82));
//        playerCardInputList.add(new CardInput(544, 227353, "DALI", 82));
//        playerCardInputList.add(new CardInput(559, 225341, "DAVID GARCIA", 82));
//        playerCardInputList.add(new CardInput(546, 246242, "DIA", 82));
//        playerCardInputList.add(new CardInput(547, 267268, "DIBERNARDO", 82));
//        playerCardInputList.add(new CardInput(548, 226268, "DIMARCO", 82));
//        playerCardInputList.add(new CardInput(588, 234577, "DIOGO COSTA", 82));
//        playerCardInputList.add(new CardInput(552, 247811, "ENDO", 82));
//        playerCardInputList.add(new CardInput(553, 242896, "ENGEN", 82));
        playerCardInputList.add(new CardInput(551, 235410, "EN-NESYRI", 82));
//        playerCardInputList.add(new CardInput(603, 184134, "FERNANDO", 82));
        playerCardInputList.add(new CardInput(624, 241461, "FERRAN TORRES", 82));
        playerCardInputList.add(new CardInput(276, 201942, "FIRMINO", 82));
        playerCardInputList.add(new CardInput(557, 211738, "FLEKKEN", 82));
        playerCardInputList.add(new CardInput(273, 216320, "FOFANA", 82));
        playerCardInputList.add(new CardInput(560, 211688, "GAYA", 82));
//        playerCardInputList.add(new CardInput(562, 192318, "GOTZE", 82));
//        playerCardInputList.add(new CardInput(563, 241546, "GREBOVAL", 82));
//        playerCardInputList.add(new CardInput(564, 212096, "GRIFO", 82));
//        playerCardInputList.add(new CardInput(566, 251517, "GVARDIOL", 82));
//        playerCardInputList.add(new CardInput(568, 243263, "HATCH", 82));
        playerCardInputList.add(new CardInput(569, 235790, "HAVERTZ", 82));
//        playerCardInputList.add(new CardInput(570, 242024, "HUERTA", 82));
//        playerCardInputList.add(new CardInput(595, 232498, "ISI", 82));
//        playerCardInputList.add(new CardInput(571, 226973, "JAKOBSSON", 82));
//        playerCardInputList.add(new CardInput(353, 231591, "JAVI GALAN", 82));
//        playerCardInputList.add(new CardInput(590, 212814, "JOAO MARIO", 82));
//        playerCardInputList.add(new CardInput(572, 266384, "JONSDOTTIR", 82));
        playerCardInputList.add(new CardInput(537, 223334, "JOELINTON", 82));
        playerCardInputList.add(new CardInput(269, 230938, "KESSIE", 82));
        playerCardInputList.add(new CardInput(418, 225850, "KIMPEMBE", 82));
//        playerCardInputList.add(new CardInput(573, 243245, "KOKCU", 82));
        playerCardInputList.add(new CardInput(574, 207410, "KOVACIC", 82));
//        playerCardInputList.add(new CardInput(575, 226325, "KRIEGER", 82));
//        playerCardInputList.add(new CardInput(577, 219522, "LEDESMA", 82));
//        playerCardInputList.add(new CardInput(594, 233150, "LEILA OUAHABI", 82));
        playerCardInputList.add(new CardInput(335, 213565, "LEMAR", 82));
        playerCardInputList.add(new CardInput(579, 241671, "LIVAKOVIC", 82));
        playerCardInputList.add(new CardInput(580, 222077, "LOCATELLI", 82));
//        playerCardInputList.add(new CardInput(439, 199482, "LOPES", 82));
//        playerCardInputList.add(new CardInput(582, 239761, "MAANUM", 82));
//        playerCardInputList.add(new CardInput(583, 239837, "MAC ALLISTER", 82));
//        playerCardInputList.add(new CardInput(584, 267339, "MACE", 82));
//        playerCardInputList.add(new CardInput(19935, 50590354, "MALARD", 82));
//        playerCardInputList.add(new CardInput(587, 236401, "MAZRAOUI", 82));
        playerCardInputList.add(new CardInput(267, 234642, "MENDY", 82));
//        playerCardInputList.add(new CardInput(605, 258789, "MISA", 82));
        playerCardInputList.add(new CardInput(352, 233084, "MOLINA", 82));
//        playerCardInputList.add(new CardInput(589, 256095, "MORRONI", 82));
        playerCardInputList.add(new CardInput(550, 259334, "NEREA EIZAGIRRE", 82));
        playerCardInputList.add(new CardInput(591, 253072, "NUNEZ", 82));
        playerCardInputList.add(new CardInput(419, 252145, "NUNO MENDES", 82));
//        playerCardInputList.add(new CardInput(593, 192366, "OTAMENDI", 82));
//        playerCardInputList.add(new CardInput(275, 210411, "OTAVIO", 82));
//        playerCardInputList.add(new CardInput(19933, 50596602, "PAWOLLEK", 82));
        playerCardInputList.add(new CardInput(597, 240950, "PEDRO GONCALVES", 82));
//        playerCardInputList.add(new CardInput(598, 236428, "PERISSET", 82));
        playerCardInputList.add(new CardInput(599, 267240, "PICKETT", 82));
        playerCardInputList.add(new CardInput(91, 204935, "PICKFORD", 82));
        playerCardInputList.add(new CardInput(601, 224987, "PROVEDEL", 82));
//        playerCardInputList.add(new CardInput(20359, 227421, "RAFAELLE", 82));
//        playerCardInputList.add(new CardInput(543, 213516, "RICARDO HORTA", 82));
//        playerCardInputList.add(new CardInput(604, 267226, "RODRIGUEZ", 82));
        playerCardInputList.add(new CardInput(119, 232488, "ROMERO", 82));
//        playerCardInputList.add(new CardInput(606, 266091, "SANCHEZ", 82));
//        playerCardInputList.add(new CardInput(607, 233049, "SANCHO", 82));
//        playerCardInputList.add(new CardInput(327, 204639, "SAVIC", 82));
//        playerCardInputList.add(new CardInput(611, 226985, "SCHOUGH", 82));
//        playerCardInputList.add(new CardInput(613, 226991, "SEMBRANT", 82));
//        playerCardInputList.add(new CardInput(614, 239344, "SIMON", 82));
        playerCardInputList.add(new CardInput(617, 245839, "SUGITA", 82));
        playerCardInputList.add(new CardInput(618, 236772, "SZOBOSZLAI", 82));
        playerCardInputList.add(new CardInput(620, 241788, "TAREMI", 82));
//        playerCardInputList.add(new CardInput(623, 223959, "TORREIRA", 82));
        playerCardInputList.add(new CardInput(625, 244369, "TSYGANKOV", 82));
        playerCardInputList.add(new CardInput(626, 223197, "UNAL", 82));
//        playerCardInputList.add(new CardInput(628, 233751, "VAN DE DONK", 82));
        playerCardInputList.add(new CardInput(198, 272208, "VANEGAS", 82));
//        playerCardInputList.add(new CardInput(124, 240091, "VICARIO", 82));
        playerCardInputList.add(new CardInput(630, 212188, "WERNER", 82));
//        playerCardInputList.add(new CardInput(98, 196978, "WILSON", 82));
//        playerCardInputList.add(new CardInput(631, 199503, "XHAKA", 82));


        playerCardInputList.add(new CardInput(634, 208920, "AKE", 81));
        playerCardInputList.add(new CardInput(638, 230977, "ALMIRON", 81));
        playerCardInputList.add(new CardInput(639, 235844, "ALVAREZ", 81));
//        playerCardInputList.add(new CardInput(641, 272005, "ANDONOVA", 81));
        playerCardInputList.add(new CardInput(699, 255475, "ANTONY", 81));
        playerCardInputList.add(new CardInput(642, 206511, "ARNOLD", 81));
        playerCardInputList.add(new CardInput(643, 263578, "BALDE", 81));
//        playerCardInputList.add(new CardInput(644, 233246, "BARNES", 81));
        playerCardInputList.add(new CardInput(290, 200260, "BERGHUIS", 81));
        playerCardInputList.add(new CardInput(673, 251892, "BETO", 81));
//        playerCardInputList.add(new CardInput(645, 265857, "BILBAULT", 81));
        playerCardInputList.add(new CardInput(646, 233364, "BLACKSTENIUS", 81));
//        playerCardInputList.add(new CardInput(700, 235944, "BRAIS MENDEZ", 81));
        playerCardInputList.add(new CardInput(647, 261740, "BRAND", 81));
        playerCardInputList.add(new CardInput(648, 228881, "CALABRIA", 81));
//        playerCardInputList.add(new CardInput(650, 272010, "CALLIGARIS", 81));
//        playerCardInputList.add(new CardInput(90, 229984, "CHILWELL", 81));
//        playerCardInputList.add(new CardInput(20412, 278219, "CHAWINGA", 81));
        playerCardInputList.add(new CardInput(652, 246172, "CHUKWUEZE", 81));
//        playerCardInputList.add(new CardInput(655, 231736, "COLAPRICO", 81));
        playerCardInputList.add(new CardInput(427, 239093, "CLAUSS", 81));
//        playerCardInputList.add(new CardInput(653, 197655, "COATES", 81));
//        playerCardInputList.add(new CardInput(656, 264963, "CORBOZ", 81));
        playerCardInputList.add(new CardInput(658, 199304, "DANILO", 81));
        playerCardInputList.add(new CardInput(660, 236276, "DANJUMA", 81));
//        playerCardInputList.add(new CardInput(431, 243630, "DAVID", 81));
//        playerCardInputList.add(new CardInput(722, 219693, "DIEGO CARLOS", 81));
        playerCardInputList.add(new CardInput(666, 233096, "DUMFRIES", 81));
//        playerCardInputList.add(new CardInput(717, 226271, "FABIAN RUIZ", 81));
        playerCardInputList.add(new CardInput(663, 209297, "FRED", 81));
//        playerCardInputList.add(new CardInput(672, 239791, "GLAS", 81));
        playerCardInputList.add(new CardInput(679, 190941, "HRADECKY", 81));
        playerCardInputList.add(new CardInput(733, 216201, "INAKI WILLIAMS", 81));
        playerCardInputList.add(new CardInput(680, 198219, "INSIGNE", 81));
        playerCardInputList.add(new CardInput(681, 233731, "ISAK", 81));
//        playerCardInputList.add(new CardInput(682, 227369, "JENSEN", 81));
//        playerCardInputList.add(new CardInput(683, 232730, "KAMADA", 81));
//        playerCardInputList.add(new CardInput(687, 216354, "KRAMARIC", 81));
//        playerCardInputList.add(new CardInput(685, 179645, "KJAER", 81));
        playerCardInputList.add(new CardInput(686, 237678, "KONATE", 81));
//        playerCardInputList.add(new CardInput(690, 247790, "LATTWEIN", 81));
        playerCardInputList.add(new CardInput(693, 192563, "LENO", 81));
//        playerCardInputList.add(new CardInput(694, 226316, "LEROUX", 81));
//        playerCardInputList.add(new CardInput(123, 226226, "LO CELSO", 81));
        playerCardInputList.add(new CardInput(697, 230899, "LOOKMAN", 81));
//        playerCardInputList.add(new CardInput(19170, 50553640, "LOZANO", 81));
        playerCardInputList.add(new CardInput(654, 233927, "LUCAS PAQUETA", 81));
        playerCardInputList.add(new CardInput(254, 208618, "LUCAS VAZQUEZ", 81));
        playerCardInputList.add(new CardInput(263, 222737, "MALCOM", 81));
        playerCardInputList.add(new CardInput(726, 204614, "MARIO RUI", 81));
//        playerCardInputList.add(new CardInput(649, 237288, "MARIONA", 81));
//        playerCardInputList.add(new CardInput(437, 191202, "MATIC", 81));
//        playerCardInputList.add(new CardInput(701, 175943, "MERTENS", 81));
//        playerCardInputList.add(new CardInput(702, 267272, "MILAZZO", 81));
//        playerCardInputList.add(new CardInput(703, 205175, "MILIK", 81));
//        playerCardInputList.add(new CardInput(367, 265063, "MINGE", 81));
        playerCardInputList.add(new CardInput(704, 192883, "MKHITARYAN", 81));
//        playerCardInputList.add(new CardInput(18904, 50586648, "MOFFI TOTW", 81));
//        playerCardInputList.add(new CardInput(706, 189575, "MUNIAIN", 81));
        playerCardInputList.add(new CardInput(635, 252308, "MUSRATI", 81));
//        playerCardInputList.add(new CardInput(707, 227257, "NOBBS", 81));
//        playerCardInputList.add(new CardInput(709, 140233, "OCHOA", 81));
        playerCardInputList.add(new CardInput(710, 265319, "PACHECO", 81));
        playerCardInputList.add(new CardInput(711, 235659, "PARRIS", 81));
        playerCardInputList.add(new CardInput(120, 243576, "PEDRO PORRO", 81));
        playerCardInputList.add(new CardInput(696, 120533, "PEPE", 81));
        playerCardInputList.add(new CardInput(713, 216409, "POLITANO", 81));
//        playerCardInputList.add(new CardInput(715, 168651, "RAKITIC", 81));
        playerCardInputList.add(new CardInput(351, 236045, "REINILDO", 81));
//        playerCardInputList.add(new CardInput(716, 244263, "RRAHMANI", 81));
        playerCardInputList.add(new CardInput(661, 210385, "RUI SILVA", 81));
        playerCardInputList.add(new CardInput(438, 204883, "SAMBA", 81));
//        playerCardInputList.add(new CardInput(719, 244675, "SANCET", 81));
//        playerCardInputList.add(new CardInput(720, 228724, "SANCHEZ", 81));
        playerCardInputList.add(new CardInput(19234, 50566821, "SANGARE", 81));
        playerCardInputList.add(new CardInput(723, 233195, "SCHLAGER", 81));
//        playerCardInputList.add(new CardInput(19094, 50495235, "SCHMEICHEL", 81));
//        playerCardInputList.add(new CardInput(728, 243261, "SULLIVAN", 81));
//        playerCardInputList.add(new CardInput(729, 213331, "TAH", 81));
        playerCardInputList.add(new CardInput(260, 212523, "TALISCA", 81));
//        playerCardInputList.add(new CardInput(730, 247263, "TAPSOBA", 81));
//        playerCardInputList.add(new CardInput(429, 236786, "TERRIER", 81));
        playerCardInputList.add(new CardInput(731, 207421, "TROSSARD", 81));
//        playerCardInputList.add(new CardInput(422, 253306, "UGARTE", 81));
        playerCardInputList.add(new CardInput(19144, 50543638, "VLACHODIMOS", 81));
        playerCardInputList.add(new CardInput(19155, 50546981, "ZAPATA", 81));
    }

    protected static void populateTactics() {
        int index = 0;
        tacticList.add(index++, new Tactic( "3-1-4-2" , Arrays.asList(new PositionRole(GK, KEEPER), new PositionRole(CB, CENTRAL_DEFENDER), new PositionRole(CB, CENTRAL_DEFENDER), new PositionRole(CB, CENTRAL_DEFENDER), new PositionRole(CDM, POWERFUL_DM), new PositionRole(RM, ATT_FULLBACK_R), new PositionRole(CM, PLAYMAKER), new PositionRole(CM, BOX_TO_BOX),  new PositionRole(LM , ATT_FULLBACK_L),  new PositionRole(ST , COMPLETE_STRIKER),  new PositionRole(ST, AGILE_STRIKER))));
        tacticList.add(index++, new Tactic( "3-4-1-2" , Arrays.asList( new PositionRole(GK , KEEPER), new PositionRole(CB , CENTRAL_DEFENDER),  new PositionRole(CB , CENTRAL_DEFENDER), new PositionRole(CB  , CENTRAL_DEFENDER),  new PositionRole(RM , ATT_FULLBACK_R), new PositionRole(CM , POWERFUL_DM),  new PositionRole(CM , BOX_TO_BOX),  new PositionRole(LM , ATT_FULLBACK_L),  new PositionRole(CAM , PLAYMAKER),  new PositionRole(ST , COMPLETE_STRIKER), new PositionRole(ST, AGILE_STRIKER ))));
        tacticList.add(index++, new Tactic( "3-4-2-1" , Arrays.asList( new PositionRole(GK , KEEPER), new PositionRole(CB , CENTRAL_DEFENDER),  new PositionRole(CB , CENTRAL_DEFENDER), new PositionRole(CB , CENTRAL_DEFENDER),  new PositionRole(RM , ATT_FULLBACK_R), new PositionRole(CM , POWERFUL_DM),  new PositionRole(CM , BOX_TO_BOX),  new PositionRole(LM , ATT_FULLBACK_L),  new PositionRole(CF , AGILE_STRIKER),  new PositionRole(CF , AGILE_STRIKER),  new PositionRole(ST, COMPLETE_STRIKER ))));
        tacticList.add(index++, new Tactic( "3-4-3" , Arrays.asList( new PositionRole(GK , KEEPER), new PositionRole(CB , CENTRAL_DEFENDER), new PositionRole(CB , CENTRAL_DEFENDER), new PositionRole(CB , CENTRAL_DEFENDER),  new PositionRole(RM , ATT_FULLBACK_R), new PositionRole(CM , POWERFUL_DM),  new PositionRole(CM , BOX_TO_BOX),  new PositionRole(LM , ATT_FULLBACK_L),  new PositionRole(RW , AGILE_STRIKER),  new PositionRole(ST , COMPLETE_STRIKER),  new PositionRole(LW, AGILE_STRIKER ))));
        tacticList.add(index++, new Tactic( "3-5-2" , Arrays.asList( new PositionRole(GK , KEEPER), new PositionRole(CB , CENTRAL_DEFENDER),  new PositionRole(CB , CENTRAL_DEFENDER), new PositionRole(CB , CENTRAL_DEFENDER),  new PositionRole(CDM , POWERFUL_DM), new PositionRole(CDM , BOX_TO_BOX),  new PositionRole(RM , ATT_FULLBACK_R),  new PositionRole(LM , ATT_FULLBACK_L),  new PositionRole(CAM , PLAYMAKER),  new PositionRole(ST , COMPLETE_STRIKER),  new PositionRole(ST, AGILE_STRIKER ))));
        tacticList.add(index++, new Tactic( "4-1-2-1-2" , Arrays.asList(new PositionRole(GK, KEEPER), new PositionRole(RB, DEF_FULLBACK_R), new PositionRole(CB, CENTRAL_DEFENDER), new PositionRole(CB, CENTRAL_DEFENDER), new PositionRole(LB, DEF_FULLBACK_L), new PositionRole(CDM, POWERFUL_DM), new PositionRole(RM, WINGER_R), new PositionRole(LM, WINGER_L), new PositionRole(CAM, PLAYMAKER), new PositionRole(ST, COMPLETE_STRIKER), new PositionRole(ST, AGILE_STRIKER))));
        tacticList.add(index++, new Tactic( "4-1-2-1-2(2)" , Arrays.asList(new PositionRole(GK, KEEPER), new PositionRole(RB, DEF_FULLBACK_R), new PositionRole(CB, CENTRAL_DEFENDER), new PositionRole(CB, CENTRAL_DEFENDER), new PositionRole(LB, DEF_FULLBACK_L), new PositionRole(CDM, POWERFUL_DM), new PositionRole(CM, BOX_TO_BOX), new PositionRole(CM, BOX_TO_BOX), new PositionRole(CAM, PLAYMAKER), new PositionRole(ST, COMPLETE_STRIKER), new PositionRole(ST, AGILE_STRIKER))));
        tacticList.add(index++, new Tactic( "4-1-3-2" , Arrays.asList(new PositionRole(GK, KEEPER), new PositionRole(RB,DEF_FULLBACK_R), new PositionRole(CB, CENTRAL_DEFENDER), new PositionRole(CB, CENTRAL_DEFENDER), new PositionRole(LB, DEF_FULLBACK_L), new PositionRole(CDM, POWERFUL_DM), new PositionRole(RM, WINGER_R), new PositionRole(CM, BOX_TO_BOX), new PositionRole(LM, WINGER_L), new PositionRole(ST, COMPLETE_STRIKER), new PositionRole(ST, AGILE_STRIKER))));
        tacticList.add(index++, new Tactic( "4-1-4-1" , Arrays.asList( new PositionRole(GK , KEEPER), new PositionRole(RB , DEF_FULLBACK_R),  new PositionRole(CB , CENTRAL_DEFENDER), new PositionRole(CB , CENTRAL_DEFENDER),  new PositionRole(LB , DEF_FULLBACK_L), new PositionRole(CDM , POWERFUL_DM),  new PositionRole(RM , WINGER_R),  new PositionRole(CM , PLAYMAKER),  new PositionRole(CM , BOX_TO_BOX),  new PositionRole(LM , WINGER_L), new PositionRole(ST, COMPLETE_STRIKER) )));
        tacticList.add(index++, new Tactic( "4-2-1-3" , Arrays.asList( new PositionRole(GK, KEEPER), new PositionRole(RB, DEF_FULLBACK_R), new PositionRole(CB, CENTRAL_DEFENDER), new PositionRole(CB, CENTRAL_DEFENDER), new PositionRole(LB, DEF_FULLBACK_L), new PositionRole(CDM, POWERFUL_DM), new PositionRole(CDM, BOX_TO_BOX), new PositionRole(CAM, PLAYMAKER), new PositionRole(RW, WINGER_R), new PositionRole(LW, WINGER_L), new PositionRole(ST, COMPLETE_STRIKER))));
        tacticList.add(index++, new Tactic( "4-2-2-2" , Arrays.asList(new PositionRole(GK, KEEPER), new PositionRole(RB, DEF_FULLBACK_R), new PositionRole(CB, CENTRAL_DEFENDER), new PositionRole(CB, CENTRAL_DEFENDER), new PositionRole(LB, DEF_FULLBACK_L), new PositionRole(CDM, POWERFUL_DM), new PositionRole(CDM, BOX_TO_BOX), new PositionRole(CAM, WINGER_R), new PositionRole(CAM, WINGER_L), new PositionRole(ST, COMPLETE_STRIKER), new PositionRole(ST, AGILE_STRIKER))));
        tacticList.add(index++, new Tactic( "4-2-3-1" , Arrays.asList( new PositionRole(GK , KEEPER), new PositionRole(RB , DEF_FULLBACK_R),  new PositionRole(CB , CENTRAL_DEFENDER), new PositionRole(CB , CENTRAL_DEFENDER),  new PositionRole(LB , DEF_FULLBACK_L), new PositionRole(CDM , POWERFUL_DM),  new PositionRole(CDM , BOX_TO_BOX),  new PositionRole(CAM , WINGER_R),  new PositionRole(CAM , PLAYMAKER),  new PositionRole(CAM , WINGER_L), new PositionRole(ST, COMPLETE_STRIKER ))));
        tacticList.add(index++, new Tactic( "4-2-3-1(2)" , Arrays.asList( new PositionRole(GK , KEEPER), new PositionRole(RB , DEF_FULLBACK_R),  new PositionRole(CB , CENTRAL_DEFENDER), new PositionRole(CB , CENTRAL_DEFENDER),  new PositionRole(LB , DEF_FULLBACK_L), new PositionRole(CDM , POWERFUL_DM),  new PositionRole(CDM , BOX_TO_BOX),  new PositionRole(RM , WINGER_R),  new PositionRole(CAM , PLAYMAKER),  new PositionRole(LM , WINGER_L), new PositionRole(ST, COMPLETE_STRIKER ))));
        tacticList.add(index++, new Tactic( "4-2-4" , Arrays.asList(new PositionRole(GK, KEEPER), new PositionRole(RB, DEF_FULLBACK_R), new PositionRole(CB, CENTRAL_DEFENDER), new PositionRole(CB, CENTRAL_DEFENDER), new PositionRole(LB, DEF_FULLBACK_L), new PositionRole(CM, POWERFUL_DM), new PositionRole(CM, BOX_TO_BOX), new PositionRole(RW, WINGER_R), new PositionRole(LW, WINGER_L), new PositionRole(ST, COMPLETE_STRIKER), new PositionRole(ST, COMPLETE_STRIKER))));
        tacticList.add(index++, new Tactic( "4-3-1-2" , Arrays.asList(new PositionRole(GK, KEEPER), new PositionRole(RB, DEF_FULLBACK_R), new PositionRole(CB, CENTRAL_DEFENDER), new PositionRole(CB, CENTRAL_DEFENDER), new PositionRole(LB, DEF_FULLBACK_L), new PositionRole(CM, BOX_TO_BOX), new PositionRole(CM, BOX_TO_BOX), new PositionRole(CM, POWERFUL_DM), new PositionRole(CAM, PLAYMAKER), new PositionRole(ST, COMPLETE_STRIKER), new PositionRole(ST, AGILE_STRIKER))));
        tacticList.add(index++, new Tactic( "4-3-2-1" , Arrays.asList( new PositionRole(GK , KEEPER), new PositionRole(RB , DEF_FULLBACK_R),  new PositionRole(CB , CENTRAL_DEFENDER), new PositionRole(CB , CENTRAL_DEFENDER),  new PositionRole(LB , DEF_FULLBACK_L), new PositionRole(CM , PLAYMAKER),  new PositionRole(CM , POWERFUL_DM),  new PositionRole(CM , BOX_TO_BOX),  new PositionRole(CF , WINGER_R),  new PositionRole(CF , WINGER_L), new PositionRole(ST, COMPLETE_STRIKER ))));
        tacticList.add(index++, new Tactic( "4-3-3" , Arrays.asList( new PositionRole(GK , KEEPER), new PositionRole(RB , DEF_FULLBACK_R),  new PositionRole(CB , CENTRAL_DEFENDER), new PositionRole(CB , CENTRAL_DEFENDER),  new PositionRole(LB , DEF_FULLBACK_L), new PositionRole(CM , PLAYMAKER),  new PositionRole(CM , POWERFUL_DM),  new PositionRole(CM , BOX_TO_BOX),  new PositionRole(RW , WINGER_R),  new PositionRole(LW , WINGER_L), new PositionRole(ST, COMPLETE_STRIKER))));
        tacticList.add(index++, new Tactic( "4-3-3(2)" , Arrays.asList( new PositionRole(GK , KEEPER), new PositionRole(RB , DEF_FULLBACK_R),  new PositionRole(CB , CENTRAL_DEFENDER), new PositionRole(CB , CENTRAL_DEFENDER),  new PositionRole(LB , DEF_FULLBACK_L), new PositionRole(CDM , POWERFUL_DM),  new PositionRole(CM , PLAYMAKER),  new PositionRole(CM , BOX_TO_BOX),  new PositionRole(RW , WINGER_R),  new PositionRole(LW , WINGER_L), new PositionRole(ST, COMPLETE_STRIKER) )));
        tacticList.add(index++, new Tactic( "4-3-3(3)" , Arrays.asList( new PositionRole(GK , KEEPER), new PositionRole(RB , DEF_FULLBACK_R),  new PositionRole(CB , CENTRAL_DEFENDER), new PositionRole(CB , CENTRAL_DEFENDER),  new PositionRole(LB , DEF_FULLBACK_L), new PositionRole(CDM , POWERFUL_DM),  new PositionRole(CDM , BOX_TO_BOX),  new PositionRole(CM , PLAYMAKER),  new PositionRole(RW , WINGER_R),  new PositionRole(LW , WINGER_L), new PositionRole(ST, COMPLETE_STRIKER) )));
        tacticList.add(index++, new Tactic( "4-3-3(4)" , Arrays.asList( new PositionRole(GK , KEEPER), new PositionRole(RB , DEF_FULLBACK_R),  new PositionRole(CB , CENTRAL_DEFENDER), new PositionRole(CB , CENTRAL_DEFENDER),  new PositionRole(LB , DEF_FULLBACK_L), new PositionRole(CM , POWERFUL_DM),  new PositionRole(CM , BOX_TO_BOX),  new PositionRole(CAM , PLAYMAKER),  new PositionRole(RW , WINGER_R),  new PositionRole(LW , WINGER_L), new PositionRole(ST, COMPLETE_STRIKER) )));
        tacticList.add(index++, new Tactic( "4-3-3(5)" , Arrays.asList( new PositionRole(GK , KEEPER), new PositionRole(RB , DEF_FULLBACK_R),  new PositionRole(CB , CENTRAL_DEFENDER), new PositionRole(CB , CENTRAL_DEFENDER),  new PositionRole(LB , DEF_FULLBACK_L), new PositionRole(CDM , POWERFUL_DM),  new PositionRole(CM , PLAYMAKER),  new PositionRole(CM , BOX_TO_BOX),  new PositionRole(RW , AGILE_STRIKER),  new PositionRole(LW , AGILE_STRIKER), new PositionRole(CF, COMPLETE_STRIKER) )));
        tacticList.add(index++, new Tactic( "4-4-1-1" , Arrays.asList( new PositionRole(GK , KEEPER), new PositionRole(RB , DEF_FULLBACK_R),  new PositionRole(CB , CENTRAL_DEFENDER), new PositionRole(CB , CENTRAL_DEFENDER),  new PositionRole(LB , DEF_FULLBACK_L), new PositionRole(RM , WINGER_R),  new PositionRole(CM , POWERFUL_DM),  new PositionRole(CM , BOX_TO_BOX),  new PositionRole(LM , WINGER_L),  new PositionRole(CF , PLAYMAKER), new PositionRole(ST, COMPLETE_STRIKER) )));
        tacticList.add(index++, new Tactic( "4-4-1-1(2)" , Arrays.asList( new PositionRole(GK , KEEPER), new PositionRole(RB , DEF_FULLBACK_R),  new PositionRole(CB , CENTRAL_DEFENDER), new PositionRole(CB , CENTRAL_DEFENDER),  new PositionRole(LB , DEF_FULLBACK_L), new PositionRole(RM , WINGER_R),  new PositionRole(CM , POWERFUL_DM),  new PositionRole(CM , BOX_TO_BOX),  new PositionRole(LM , WINGER_L),  new PositionRole(CAM , PLAYMAKER), new PositionRole(ST, COMPLETE_STRIKER) )));
        tacticList.add(index++, new Tactic( "4-4-2" , Arrays.asList(new PositionRole(GK, KEEPER), new PositionRole(RB, DEF_FULLBACK_R), new PositionRole(CB, CENTRAL_DEFENDER), new PositionRole(CB, CENTRAL_DEFENDER), new PositionRole(LB, DEF_FULLBACK_L), new PositionRole(RM, WINGER_R), new PositionRole(CM, POWERFUL_DM), new PositionRole(CM, BOX_TO_BOX), new PositionRole(LM, WINGER_L), new PositionRole(ST, COMPLETE_STRIKER), new PositionRole(ST, AGILE_STRIKER))));
        tacticList.add(index++, new Tactic( "4-4-2(2)" , Arrays.asList(new PositionRole(GK, KEEPER), new PositionRole(RB, DEF_FULLBACK_R), new PositionRole(CB, CENTRAL_DEFENDER), new PositionRole(CB, CENTRAL_DEFENDER), new PositionRole(LB, DEF_FULLBACK_L), new PositionRole(CDM, POWERFUL_DM), new PositionRole(CDM, BOX_TO_BOX), new PositionRole(RM, WINGER_R), new PositionRole(LM, WINGER_L), new PositionRole(ST, COMPLETE_STRIKER), new PositionRole(ST, AGILE_STRIKER))));
        tacticList.add(index++, new Tactic( "4-5-1" , Arrays.asList( new PositionRole(GK , KEEPER), new PositionRole(RB , DEF_FULLBACK_R),  new PositionRole(CB , CENTRAL_DEFENDER), new PositionRole(CB , CENTRAL_DEFENDER),  new PositionRole(LB , DEF_FULLBACK_L), new PositionRole(RM , WINGER_R),  new PositionRole(CM , POWERFUL_DM),  new PositionRole(LM , WINGER_L),  new PositionRole(CAM , PLAYMAKER),  new PositionRole(CAM , PLAYMAKER), new PositionRole(ST, COMPLETE_STRIKER) )));
        tacticList.add(index++, new Tactic( "4-5-1(2)" , Arrays.asList( new PositionRole(GK , KEEPER), new PositionRole(RB , DEF_FULLBACK_R),  new PositionRole(CB , CENTRAL_DEFENDER), new PositionRole(CB , CENTRAL_DEFENDER),  new PositionRole(LB , DEF_FULLBACK_L), new PositionRole(RM , WINGER_R),  new PositionRole(CM , PLAYMAKER),  new PositionRole(CM , POWERFUL_DM),  new PositionRole(CM , BOX_TO_BOX),  new PositionRole(LM , WINGER_L), new PositionRole(ST, COMPLETE_STRIKER) )));
        tacticList.add(index++, new Tactic( "5-2-1-2" , Arrays.asList(new PositionRole(GK , KEEPER), new PositionRole(CB , CENTRAL_DEFENDER),  new PositionRole(CB , CENTRAL_DEFENDER), new PositionRole(CB , CENTRAL_DEFENDER),  new PositionRole(RWB , ATT_FULLBACK_R), new PositionRole(LWB , ATT_FULLBACK_L),  new PositionRole(CM , POWERFUL_DM),  new PositionRole(CM , BOX_TO_BOX),  new PositionRole(CAM , PLAYMAKER),  new PositionRole(ST , COMPLETE_STRIKER), new PositionRole(ST, AGILE_STRIKER))));
        tacticList.add(index++, new Tactic( "5-2-2-1" , Arrays.asList( new PositionRole(GK , KEEPER), new PositionRole(CB , CENTRAL_DEFENDER),  new PositionRole(CB , CENTRAL_DEFENDER), new PositionRole(CB , CENTRAL_DEFENDER),  new PositionRole(RWB , ATT_FULLBACK_R), new PositionRole(LWB , ATT_FULLBACK_L),  new PositionRole(CM , POWERFUL_DM),  new PositionRole(CM , BOX_TO_BOX),  new PositionRole(RW , AGILE_STRIKER), new PositionRole(LW , AGILE_STRIKER), new PositionRole(ST, COMPLETE_STRIKER) )));
        tacticList.add(index++, new Tactic( "5-2-3" , Arrays.asList( new PositionRole(GK, KEEPER), new PositionRole(CB, CENTRAL_DEFENDER), new PositionRole(CB, CENTRAL_DEFENDER), new PositionRole(CB, CENTRAL_DEFENDER), new PositionRole(RWB, ATT_FULLBACK_R), new PositionRole(LWB, ATT_FULLBACK_L), new PositionRole(CM, POWERFUL_DM), new PositionRole(CM, BOX_TO_BOX), new PositionRole(RW, AGILE_STRIKER), new PositionRole(LW, AGILE_STRIKER), new PositionRole(ST, COMPLETE_STRIKER))));
        tacticList.add(index++, new Tactic( "5-3-2" , Arrays.asList( new PositionRole(GK, KEEPER), new PositionRole(CB, CENTRAL_DEFENDER), new PositionRole(CB, CENTRAL_DEFENDER), new PositionRole(CB, CENTRAL_DEFENDER), new PositionRole(RWB, ATT_FULLBACK_R), new PositionRole(LWB, ATT_FULLBACK_L), new PositionRole(CDM, POWERFUL_DM), new PositionRole(CM, PLAYMAKER), new PositionRole(CM, BOX_TO_BOX), new PositionRole(ST, AGILE_STRIKER), new PositionRole(ST, COMPLETE_STRIKER))));
        tacticList.add(index++, new Tactic( "5-4-1" , Arrays.asList( new PositionRole(GK , KEEPER), new PositionRole(CB , CENTRAL_DEFENDER),  new PositionRole(CB , CENTRAL_DEFENDER), new PositionRole(CB , CENTRAL_DEFENDER),  new PositionRole(RWB , ATT_FULLBACK_R), new PositionRole(LWB , ATT_FULLBACK_L),  new PositionRole(RM , WINGER_R),  new PositionRole(CM , POWERFUL_DM),  new PositionRole(CM , BOX_TO_BOX),  new PositionRole(LM , WINGER_L), new PositionRole(ST, COMPLETE_STRIKER) )));
    }

    protected static void populateManagers() {
        managerList.add(new Manager("ANTONIO TOLDEO", "Spain", LIGA_F.getValue()));
//        managerList.add(new Manager("A. SOTTIL", "Italy", SERIA_A_TIM.getValue()));
        managerList.add(new Manager("B. RODGERS", "Northern Ireland", CINCH_PREM.getValue()));
        managerList.add(new Manager("C. TEVEZ", "Argentina", LPF.getValue()));
        managerList.add(new Manager("FILIPA PATAO", "Portugal", LIGA_PORTUGAL_FEMININO.getValue()));
        managerList.add(new Manager("FILIPE MARTINS", "Portugal", LIGA_PORTUGAL.getValue()));
        managerList.add(new Manager("F. GAGO", "Argentina", LIBERTADORES.getValue()));
//        managerList.add(new Manager("GARCIA", "Spain", LA_LEAGUE_EA_SPORTS.getValue()));
        managerList.add(new Manager("I. JURIC", "Croatia", SERIA_A_TIM.getValue()));
        managerList.add(new Manager("I. LEKO", "Croatia", LIGA_HRVATSKA.getValue()));
        managerList.add(new Manager("IRAOLA", "Spain", PREMIER_LEAGUE.getValue()));
//        managerList.add(new Manager("JAGOBA ARRASATE", "Spain", LA_LEAGUE_EA_SPORTS.getValue()));
        managerList.add(new Manager("J. MONTEMURRO", "Australia", CALCIO_A_FEMMINILE.getValue()));
        managerList.add(new Manager("J. NEESTRUP", "Denmark", THREEF_SUPERLIGA.getValue()));
//        managerList.add(new Manager("JORGE JESUS", "Portugal", ROSHN_SAUDI_LEAGUE.getValue()));
        managerList.add(new Manager("JOSE BORDALAS", "Spain", LA_LEAGUE_EA_SPORTS.getValue()));
        managerList.add(new Manager("J. VACCARI", "Argentina", SUDAMERICANA.getValue()));
        managerList.add(new Manager("K. PITAK", "Czech Republic", CESKA_LIGA_ZEN.getValue()));
        managerList.add(new Manager("LUIS CASTRO", "Portugal", ROSHN_SAUDI_LEAGUE.getValue()));
        managerList.add(new Manager("M. BEARD", "England", BARCLAYS_WSL.getValue()));
//        managerList.add(new Manager("MENDILIBAR", "Spain", LA_LEAGUE_EA_SPORTS.getValue()));
        managerList.add(new Manager("M. ALVINI", "Italy", SERIE_BKT.getValue()));
        managerList.add(new Manager("MARCO SILVA", "Portugal", PREMIER_LEAGUE.getValue()));
        managerList.add(new Manager("M. KOLLNER", "Germany", THREE_LIGA.getValue()));
        managerList.add(new Manager("N. JELECAK", "Bosnia and Herzegovina", D1_ARKEMA.getValue()));
        managerList.add(new Manager("N. BJELICA", "Croatia", TRENDYOL_SUPER_LIG.getValue())); // Tur1
        managerList.add(new Manager("P. HECKINGBOTTOM", "England", PREMIER_LEAGUE.getValue()));
//        managerList.add(new Manager("RAFA BENITEZ", "Spain", LA_LEAGUE_EA_SPORTS.getValue()));
        managerList.add(new Manager("R. EDWARDS", "Wales", PREMIER_LEAGUE.getValue()));
        managerList.add(new Manager("R. LUCESCU", "Romania", HELLAS_LIGA.getValue()));
//        managerList.add(new Manager("R. PALLADINO", "Italy", SERIA_A_TIM.getValue()));
        managerList.add(new Manager("R. SCHMIDT", "Germany", LIGA_PORTUGAL.getValue()));
        managerList.add(new Manager("R. VIDOSIC", "Croatia", A_LEAGUE.getValue()));
        managerList.add(new Manager("R. VILAHAMN", "Sweden", BARCLAYS_WSL.getValue()));
//        managerList.add(new Manager("SERGIO", "Spain", LA_LEAGUE_EA_SPORTS.getValue()));
        managerList.add(new Manager("S. PIOLI", "Italy", SERIA_A_TIM.getValue()));
        managerList.add(new Manager("T. FRANK", "Denmark", PREMIER_LEAGUE.getValue()));
        managerList.add(new Manager("T. HORSCH", "Germany", GPFBL.getValue()));
        managerList.add(new Manager("W. KIRK", "Scotland", BARCLAYS_WSL.getValue())); // Womens Eng1
        managerList.add(new Manager("X. MASSASWABI", "Gambia", SERIA_A_TIM.getValue()));
    }
}
